<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>HisPrivacyCAWebServices2</artifactId>
	<packaging>jar</packaging>
	<name>Privacy CA Web Service - HisPrivacyCAWebServices2</name>
	<description>Installs MySQL, Java, Glassfish, Web Services, and UI Portals</description>

	<parent>
		<groupId>com.intel.mtwilson.core.trustagent</groupId>
		<artifactId>trust-agent-parent</artifactId>
		<version>2.3</version>
	</parent>

	<!-- these dependencies are only for including the api client, they are 
		not needed for the core shell script functions. the maven-dependency-plugin 
		copies these dependencies and all their dependencies into a folder for distribution -->
	<dependencies>
		<dependency>
			<groupId>com.intel.mtwilson.core.services</groupId>
			<artifactId>webservice-util</artifactId>
			<version>${project.parent.version}</version>
			<type>jar</type>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.0</version>
		</dependency>
		<!--dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.0.4</version>
		</dependency-->
		<!--dependency>
			<groupId>org.apache.geronimo.bundles</groupId>
			<artifactId>commons-discovery</artifactId>
			<version>0.4_1</version>
		</dependency-->
		<dependency>
			<groupId>com.sun.xml.fastinfoset</groupId>
			<artifactId>FastInfoset</artifactId>
			<version>1.2.4</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.1.12</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-xjc</artifactId>
			<version>2.1.11</version>
		</dependency>
		<dependency>
			<groupId>javax.xml</groupId>
			<artifactId>jaxrpc</artifactId>
			<version>1.1</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-rt</artifactId>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.ws</groupId>
			<artifactId>jaxws-tools</artifactId>
			<version>2.1.7</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jsr173_api</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>javax.jws</groupId>
			<artifactId>jsr181-api</artifactId>
			<version>1.0-MR1</version>
		</dependency>
		<dependency>
			<groupId>javax.annotation</groupId>
			<artifactId>jsr250-api</artifactId>
			<version>1.0</version>
		</dependency>
		<!--dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4</version>
		</dependency-->
		<!--dependency>
			<groupId>org.jvnet</groupId>
			<artifactId>mimepull</artifactId>
			<version>1.6</version>
		</dependency-->
		<dependency>
			<groupId>com.sun.org.apache.xml.internal</groupId>
			<artifactId>resolver</artifactId>
			<version>20050927</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.soap</groupId>
			<artifactId>saaj-api</artifactId>
			<version>1.3</version>
		</dependency>
		<!--dependency>
			<groupId>com.sun.xml.messaging.saaj</groupId>
			<artifactId>saaj-impl</artifactId>
			<version>1.3.1</version>
		</dependency-->
		<dependency>
			<groupId>org.jvnet.staxex</groupId>
			<artifactId>stax-ex</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
			<groupId>com.sun.xml.stream.buffer</groupId>
			<artifactId>streambuffer</artifactId>
			<version>0.8</version>
		</dependency>
		<!--dependency>
			<groupId>org.apache.geronimo.bundles</groupId>
			<artifactId>woodstox</artifactId>
			<version>3.2.9_1</version>
		</dependency-->
		<dependency>
			<groupId>wsdl4j</groupId>
			<artifactId>wsdl4j</artifactId>
			<version>1.5.1</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.9</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
			<version>1.0.9</version>
		</dependency>
		<dependency>
			<groupId>jaxb</groupId>
			<artifactId>activation</artifactId>
			<version>1.0.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.axis</groupId>
			<artifactId>axis</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
		</dependency>
		<!-- XXX the following dependencies are declared so the java code will 
			compile in the IDE - but they are included separately by the ant build for 
			now; when we fully mavenize, we can use them directly -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.servlet</artifactId>
			<version>3.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>javax.servlet.jsp</artifactId>
			<version>3.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15</artifactId>
			<version>1.46</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- begin copy artifacts plugin -->
			<plugin>
				<!--<groupId>org.apache.maven.plugins</groupId> -->
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- exclude all the artifacts that are already in the WEB-INF/lib 
								that is a "source" folder -->
							<excludeArtifactIds>javax.servlet,javax.servlet.jsp</excludeArtifactIds>
							<outputDirectory>${project.build.directory}/WEB-INF/lib</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- end copy artifacts plugin -->
			<!-- begin build .war file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>default-cli</id>
						<phase>process-resources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<ant antfile="${basedir}/build.xml" target="server" />
								<ant antfile="${basedir}/build.xml" target="client" />
							</target>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.apache.ant</groupId>
						<artifactId>ant</artifactId>
						<version>1.8.4</version>
					</dependency>
					<dependency>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
						<version>1.6</version> <!-- Open Attestation builds target Java 1.6, therefore you must use JDK 1.6 to 
							compile this. Make sure you set JDK 1.6 as the specific JDK for this maven 
							project in your IDE in order for this to work. -->
						<scope>system</scope>
						<systemPath>${java.home}/../lib/tools.jar</systemPath>
					</dependency>
				</dependencies>
			</plugin>
			<!-- end build .war file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<executions>
					<execution>
						<id>regular-jar-with-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<shadedArtifactAttached>true</shadedArtifactAttached>
							<shadedClassifierName>setup</shadedClassifierName>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<manifestEntries>
										<Main-Class>gov.niarl.his.privacyca.HisSetup</Main-Class>
									</manifestEntries>
								</transformer>
							</transformers>
							<filters>
								<filter>
									<artifact>*:*</artifact>
									<includes>
										<include>gov/niarl/his/privacyca/**</include>
										<include>com/intel/mtwilson/util/**</include>
										<include>org/slf4j/**</include>
										<include>ch/qos/logback/**</include>
										<include>org/bouncycastle/**</include>
									</includes>
								</filter>
							</filters>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- begin deploy artifact to repository -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
			</plugin>
			<!-- end deploy artifact to repository -->
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.5</version>
					<executions>
						<execution>
							<id>attach-artifacts</id>
							<phase>package</phase>
							<goals>
								<goal>attach-artifact</goal>
							</goals>
							<configuration>
								<artifacts>
									<artifact>
										<file>${project.build.directory}/${project.artifactId}.war</file>
										<type>war</type>
									</artifact>
									<!-- this artifact created by the ant script build.xml ; should 
										be same code as the specially-created artifact gov.niarl.his.webservices:his-clients:1.0:HisPrivacyCAWebServices2-client 
										.. actually that one was made from this same artifact; one day we may replace 
										all usages of that one with this file so the build will be more easily repeatable -->
									<artifact>
										<file>${project.build.directory}/HisPrivacyCAWebServices2-client.jar</file>
										<type>jar</type>
										<classifier>client</classifier>
									</artifact>
									<!-- <artifact> <file>HisWebServices-client.jar</file> <type>jar</type> 
										<classifier>HisWebServices-client</classifier> </artifact> -->
								</artifacts>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
</project>
